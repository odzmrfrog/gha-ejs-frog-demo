name: "ohadz-gha-ejs-build"
on: 
  schedule:
    - cron: "0 0 * * *"  
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DOCKER_REPO: 'ohadz-test-docker'
      IMAGE_NAME: 'ohadz-gha-ejs-demo:${{ github.run_number }}'
    permissions:
      id-token: write
      contents: read
      actions: read 
      attestations: write    
      packages: write
    # Here we install all the tools : docker buildx, QEMU, JDK 11, JFrog CLI
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      # Install prerequisites
      -
        # Add support for more platforms with QEMU (optional)
        # https://github.com/docker/setup-qemu-action
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3      
      - name: Install Node
        uses: actions/setup-node@v3
        with:
            node-version: 18 
      - name: Setup JFrog CLI
        id: setup-cli
        uses: jfrog/setup-jfrog-cli@v4
        env:
          JF_URL: https://${{ vars.JF_HOST }}/
          JF_PROJECT: ${{ vars.JF_PROJECT_KEY }}
        with:
            oidc-provider-name: ohadz-gh
            oidc-audience: test-aud
      - name: NPM Audit 
        env:
          JFROG_CLI_BUILD_NAME: 'ohadz-gha-ejs-demo'
          JF_URL: https://${{ vars.JF_HOST }}/
          JF_HOST: ${{ vars.JF_HOST }}
          JF_PROJECT: ${{ vars.JF_PROJECT_KEY }}
        run: |
          jf rt bce ${{ env.JFROG_CLI_BUILD_NAME }} $GITHUB_RUN_NUMBER 
          jf rt bag ${{ env.JFROG_CLI_BUILD_NAME }} $GITHUB_RUN_NUMBER
          jf npmc --repo-resolve dro-npm-unsecure-remote
          jf npm i --omit dev --build-name=${{ env.JFROG_CLI_BUILD_NAME }} --build-number=$GITHUB_RUN_NUMBER
          jf audit --npm --fail=false
      
      - name: Authenticate Docker
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.JF_HOST }}
          username: ${{ steps.setup-cli.outputs.oidc-user }}
          password: ${{ steps.setup-cli.outputs.oidc-token }}
      # docker image build
      - name: Build and Push Docker image
        uses: docker/build-push-action@v6
        id: build
        with:
          push: true
          provenance: true
          platforms: linux/amd64 #, linux/arm64
          tags: ${{ vars.JF_HOST }}/${{ env.DOCKER_REPO }}/${{ env.IMAGE_NAME }}
      # docker xray scanning
      - name: docker Info
        id: docker-info
        run: |  
          echo "digest=$(docker images --no-trunc --quiet ${{ vars.JF_HOST }}/${{ env.DOCKER_REPO }}/${{ env.IMAGE_NAME }})" >> $GITHUB_OUTPUT
          jf docker pull ${{ vars.JF_HOST }}/${{ env.DOCKER_REPO }}/${{ env.IMAGE_NAME }}
          jf docker scan ${{ vars.JF_HOST }}/${{ env.DOCKER_REPO }}/${{ env.IMAGE_NAME }}
        # adding the built docker into the JFrog build info
      - name: add docker package to build
        env:
          JFROG_CLI_BUILD_NAME: 'ohadz-gha-ejs-demo'
          JF_URL: https://${{ vars.JF_HOST }}/
          JF_PROJECT: ${{ vars.JF_PROJECT_KEY }}
        run: |
          echo "${{ vars.JF_HOST }}/${{ env.DOCKER_REPO }}/${{ env.IMAGE_NAME }}@${{ steps.build.outputs.digest }}" > metadata.json
          jf rt build-docker-create ${{ env.DOCKER_REPO }} --image-file metadata.json --build-name $JFROG_CLI_BUILD_NAME --build-number $GITHUB_RUN_NUMBER
      #- name: Attest
      #  uses: actions/attest-build-provenance@v1
      #  id: attest
      #  with:
      #    # The subject name must be the image name without tag
      #    subject-name: ${{ vars.JF_HOST }}/${{ env.DOCKER_REPO }}/ejs-demo
      #    subject-digest: ${{ steps.build.outputs.digest }} #format must be sha256:<hexvalue>
      #    push-to-registry: true
      - name: Publish build info & scan build
        id: publish-build  
        env:
          JFROG_CLI_BUILD_NAME: 'ohadz-gha-ejs-demo'
          JF_URL: https://${{ vars.JF_HOST }}/
          JF_PROJECT: ${{ vars.JF_PROJECT_KEY }}
        run: |
           jf rt bp $JFROG_CLI_BUILD_NAME $GITHUB_RUN_NUMBER
           jf bs $JFROG_CLI_BUILD_NAME $GITHUB_RUN_NUMBER
